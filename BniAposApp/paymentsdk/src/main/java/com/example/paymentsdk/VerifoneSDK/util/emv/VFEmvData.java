package com.example.paymentsdk.VerifoneSDK.util.emv;

import android.os.RemoteException;
import android.util.Log;


import com.example.paymentsdk.sdk.Common.Constant;
import com.example.paymentsdk.sdk.Common.InputUtil;
import com.vfi.smartpos.deviceservice.aidl.IEMV;

import com.vfi.smartpos.deviceservice.constdefine.ConstIPBOC;

import java.util.ArrayList;
import java.util.List;


/**
 * Mock emv data.
 */

public class VFEmvData {


    /**
     * Created by Simon on 2018/9/7.
     *
     * @brief Demo source of set AID and RID
     */

    private static final String TAG = "EMV-SetAidRid";
    private static ArrayList<EMVParamAppCaseA> emvParamAppUMSList;
    private static ArrayList<EMVParamKeyCaseA> emvParamKeyUMSList;


    IEMV iemv;

    public VFEmvData(IEMV iemv) {
        this.iemv = iemv;
    }

    public static void updateEMVAIDFromOutside() {
        emvParamAppUMSList = null;
        emvParamKeyUMSList = null;
    }

    /**
     * @brief set, update the AID
     * <p>
     * In this demo, there're 2 way to set the AID
     * 1#, set each tag & value
     * 2#, set one tlv string
     * in the EMVParamAppCaseA, you can reset the tag or value in EMVParamAppCaseA.append
     * \code{.java}
     * \endcode
     * @version
     * @see EMVParamAppCaseA
     */
    public void setAID(int type) {
        boolean isSuccess;
        if (emvParamAppUMSList != null && emvParamAppUMSList.size() > 0) {

        } else {
            if (type == ConstIPBOC.updateRID.operation.clear) {
                // clear all AID
                isSuccess = false;
                try {
                    isSuccess = iemv.updateAID(3, 1, null);
                    Log.d("TAG", "Clear AID (smart AID):" + isSuccess);
                    isSuccess = iemv.updateAID(3, 2, null);
                    Log.d("TAG", "Clear AID (CTLS):" + isSuccess);

                    isSuccess = iemv.updateRID(3, null);
                    Log.d("TAG", "Clear RID:" + isSuccess);


                } catch (RemoteException e) {
                    e.printStackTrace();
                }
                return;
            }
            // append a AID

            if (type == ConstIPBOC.updateRID.operation.append) {
                emvParamAppUMSList = new ArrayList<EMVParamAppCaseA>();
                emvParamKeyUMSList = new ArrayList<EMVParamKeyCaseA>();
                //get from database;
                // 1# way of setting the AID
                // set each Tag & Value
//                List<AcquirerParams> AIDParams = AcquirerParamsDBHandler.GET(MyApplication.getContext(),
//                        null);
//                for (AcquirerParams params : AIDParams) {

                EMVParamAppCaseA emvParamApp = new EMVParamAppCaseA();

                emvParamApp.setComment("VISA");
                emvParamApp.flagAppendRemoveClear = ConstIPBOC.updateRID.operation.append;
                emvParamApp.aidType = ConstIPBOC.updateAID.aidType.smart_card;

                emvParamApp.append(EMVParamAppCaseA.TAG_AID_9F06, "A0000000031010");
                emvParamApp.append(EMVParamAppCaseA.TAG_VerNum_9F09, "0100");// params.getApp_Version_Number());
                emvParamApp.append(EMVParamAppCaseA.TAG_TAC_Default_DF11, "DC4000A800");
                emvParamApp.append(EMVParamAppCaseA.TAG_TAC_Denial_DF13, "0010000000");
                emvParamApp.append(EMVParamAppCaseA.TAG_TAC_Online_DF12, "DC4004F800");
                emvParamApp.append(EMVParamAppCaseA.TAG_Threshold_DF15, InputUtil.ProcessNumericToFixedDigits(8,String.valueOf("0")));
                emvParamApp.append(EMVParamAppCaseA.TAG_TargetPercentage_DF17, "0090"); // String.valueOf(params.getTarget_Percentage().intValue()));
                emvParamApp.append(EMVParamAppCaseA.TAG_MaxTargetPercentage_DF16, "0090");// String.valueOf(params.getMax_Target_Percentage().intValue()));
                emvParamApp.append(EMVParamAppCaseA.TAG_DefaultDDOL_DF14, "9F3704");
                emvParamApp.append(EMVParamAppCaseA.TAG_DefaultTDOL_97_Optional, "9F02065F2A029A039C0195059F3704");
                emvParamApp.append(EMVParamAppCaseA.TAG_FloorLimit_9F1B, InputUtil.ProcessNumericToFixedDigits(8, String.valueOf("0")));//"00000000");//
                emvParamApp.append(EMVParamAppCaseA.TAG_ASI_DF01, "01");
                emvParamApp.append(EMVParamAppCaseA.TAG__87, "01"); //Application Priority Indicator
                emvParamApp.append(EMVParamAppCaseA.TAG__9C, "00"); //Transaction Code
                emvParamApp.append(EMVParamAppCaseA.TAG__9F15_Optional, "00");//Merchant Category Code
                emvParamApp.append(EMVParamAppCaseA.TAG_CountryCodeTerm_9F1A, Constant.BaseCountryCode);
                emvParamApp.append(EMVParamAppCaseA.TAG_CurrencyCodeTerm_5F2A, Constant.BaseCurrencyCode);

                emvParamApp.append(EMVParamAppCaseA.TAG_AppTermCap_9F33,"E0F1C8");
                emvParamApp.append(EMVParamAppCaseA.TAG_AppTermAddCap_9F40,"F000F0A001");


//                emvParamApp.append(EMVParamAppCaseA.TAG__DF04,"000000000000");//CVM Capabilities
                //                emvParamApp.append(EMVParamAppCaseA.TAG__9F5A,"00"); //Terminal Transaction Type

                //  emvParamApp.append(EMVParamKeyCaseA.)

                // emvParamApp.append(0xDF18, "01");
                //Values to get from SERVER...

                emvParamApp.append(EMVParamAppCaseA.TAG_ECTransLimit_9F7B, "000000100000");
                emvParamApp.append(EMVParamAppCaseA.TAG_CTLSFloorLimit_DF19, "000000100000");
                emvParamApp.append(EMVParamAppCaseA.TAG_CTLSTransLimit_DF20, "009999999999");
                emvParamApp.append(EMVParamAppCaseA.TAG_CTLSCVMLimit_DF21, "000000100000");

                //   Log.d(TAG, emvParamApp.getTlvString());
                emvParamAppUMSList.add(emvParamApp);


                EMVParamAppCaseA emvParamApp_Cless = new EMVParamAppCaseA();

                emvParamApp_Cless.setComment("VISA");
                emvParamApp_Cless.flagAppendRemoveClear = ConstIPBOC.updateRID.operation.append;
                emvParamApp_Cless.aidType = ConstIPBOC.updateAID.aidType.contactless;

                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_AID_9F06, "A0000000031010");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_VerNum_9F09, "0100");// params.getApp_Version_Number());
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_TAC_Default_DF11, "DC4000A800");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_TAC_Denial_DF13, "0010000000");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_TAC_Online_DF12, "DC4004F800");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_Threshold_DF15,InputUtil.ProcessNumericToFixedDigits(8,String.valueOf("0")));
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_TargetPercentage_DF17, "0090"); // String.valueOf(params.getTarget_Percentage().intValue()));
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_MaxTargetPercentage_DF16, "0090");// String.valueOf(params.getMax_Target_Percentage().intValue()));
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_DefaultDDOL_DF14, "9F3704");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_DefaultTDOL_97_Optional, "9F02065F2A029A039C0195059F3704");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_FloorLimit_9F1B, InputUtil.ProcessNumericToFixedDigits(8, String.valueOf("0")));//"00000000");//
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_ASI_DF01, "01");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG__87, "01"); //Application Priority Indicator
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG__9C, "00"); //Transaction Code
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG__9F15_Optional, "00");//Merchant Category Code
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_CountryCodeTerm_9F1A, Constant.BaseCountryCode);
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_CurrencyCodeTerm_5F2A, Constant.BaseCurrencyCode);

                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_AppTermCap_9F33,"E0F1C8");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_AppTermAddCap_9F40,"F000F0A001");


//                emvParamApp.append(EMVParamAppCaseA.TAG__DF04,"000000000000");//CVM Capabilities
                //                emvParamApp.append(EMVParamAppCaseA.TAG__9F5A,"00"); //Terminal Transaction Type

                //  emvParamApp.append(EMVParamKeyCaseA.)

                // emvParamApp.append(0xDF18, "01");
                //Values to get from SERVER...

                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_ECTransLimit_9F7B, "000000100000");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_CTLSFloorLimit_DF19, "000000100000");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_CTLSTransLimit_DF20, "009999999999");
                emvParamApp_Cless.append(EMVParamAppCaseA.TAG_CTLSCVMLimit_DF21, "000000100000");

                //   Log.d(TAG, emvParamApp.getTlvString());
                emvParamAppUMSList.add(emvParamApp_Cless);


                EMVParamAppCaseA emvParamApp1 = new EMVParamAppCaseA();

                emvParamApp1.setComment("MASTER CARD");
                emvParamApp1.flagAppendRemoveClear = ConstIPBOC.updateRID.operation.append;
                emvParamApp1.aidType = ConstIPBOC.updateAID.aidType.smart_card;

                emvParamApp1.append(EMVParamAppCaseA.TAG_AID_9F06, "A0000000041010");
                emvParamApp1.append(EMVParamAppCaseA.TAG_VerNum_9F09, "0100");// params.getApp_Version_Number());
                emvParamApp1.append(EMVParamAppCaseA.TAG_TAC_Default_DF11, "DC4000A800");
                emvParamApp1.append(EMVParamAppCaseA.TAG_TAC_Denial_DF13, "0010000000");
                emvParamApp1.append(EMVParamAppCaseA.TAG_TAC_Online_DF12, "DC4004F800");
                emvParamApp1.append(EMVParamAppCaseA.TAG_Threshold_DF15,InputUtil.ProcessNumericToFixedDigits(8,String.valueOf("0")));
                emvParamApp1.append(EMVParamAppCaseA.TAG_TargetPercentage_DF17, "0090"); // String.valueOf(params.getTarget_Percentage().intValue()));
                emvParamApp1.append(EMVParamAppCaseA.TAG_MaxTargetPercentage_DF16, "0090");// String.valueOf(params.getMax_Target_Percentage().intValue()));
                emvParamApp1.append(EMVParamAppCaseA.TAG_DefaultDDOL_DF14, "9F3704");
                emvParamApp1.append(EMVParamAppCaseA.TAG_DefaultTDOL_97_Optional, "9F02065F2A029A039C0195059F3704");
                emvParamApp1.append(EMVParamAppCaseA.TAG_FloorLimit_9F1B, InputUtil.ProcessNumericToFixedDigits(8, String.valueOf("0")));//"00000000");//
                emvParamApp1.append(EMVParamAppCaseA.TAG_ASI_DF01, "01");
                emvParamApp1.append(EMVParamAppCaseA.TAG__87, "01"); //Application Priority Indicator
                emvParamApp1.append(EMVParamAppCaseA.TAG__9C, "00"); //Transaction Code
                emvParamApp1.append(EMVParamAppCaseA.TAG__9F15_Optional, "00");//Merchant Category Code
                emvParamApp1.append(EMVParamAppCaseA.TAG_CountryCodeTerm_9F1A, Constant.BaseCountryCode);
                emvParamApp1.append(EMVParamAppCaseA.TAG_CurrencyCodeTerm_5F2A, Constant.BaseCurrencyCode);

                emvParamApp1.append(EMVParamAppCaseA.TAG_AppTermCap_9F33,"E0F1C8");
                emvParamApp1.append(EMVParamAppCaseA.TAG_AppTermAddCap_9F40,"F000F0A001");


//                emvParamApp.append(EMVParamAppCaseA.TAG__DF04,"000000000000");//CVM Capabilities
                //                emvParamApp.append(EMVParamAppCaseA.TAG__9F5A,"00"); //Terminal Transaction Type

                //  emvParamApp.append(EMVParamKeyCaseA.)

                // emvParamApp.append(0xDF18, "01");
                //Values to get from SERVER...

                emvParamApp1.append(EMVParamAppCaseA.TAG_ECTransLimit_9F7B, "000000100000");
                emvParamApp1.append(EMVParamAppCaseA.TAG_CTLSFloorLimit_DF19, "000000100000");
                emvParamApp1.append(EMVParamAppCaseA.TAG_CTLSTransLimit_DF20, "009999999999");
                emvParamApp1.append(EMVParamAppCaseA.TAG_CTLSCVMLimit_DF21, "000000100000");

                emvParamAppUMSList.add(emvParamApp1);



                EMVParamAppCaseA emvParamApp2 = new EMVParamAppCaseA();

                emvParamApp2.setComment("BRI DEBIT");
                emvParamApp2.flagAppendRemoveClear = ConstIPBOC.updateRID.operation.append;
                emvParamApp2.aidType = ConstIPBOC.updateAID.aidType.smart_card;

                emvParamApp2.append(EMVParamAppCaseA.TAG_AID_9F06, "A0000006021010");
                emvParamApp2.append(EMVParamAppCaseA.TAG_VerNum_9F09, "0100");// params.getApp_Version_Number());
                emvParamApp2.append(EMVParamAppCaseA.TAG_TAC_Default_DF11, "FC60ACF800");
                emvParamApp2.append(EMVParamAppCaseA.TAG_TAC_Denial_DF13, "0010000000");
                emvParamApp2.append(EMVParamAppCaseA.TAG_TAC_Online_DF12, "FC6024A800");
                emvParamApp2.append(EMVParamAppCaseA.TAG_Threshold_DF15,InputUtil.ProcessNumericToFixedDigits(8,String.valueOf("0")));
                emvParamApp2.append(EMVParamAppCaseA.TAG_TargetPercentage_DF17, "0070"); // String.valueOf(params.getTarget_Percentage().intValue()));
                emvParamApp2.append(EMVParamAppCaseA.TAG_MaxTargetPercentage_DF16, "0070");// String.valueOf(params.getMax_Target_Percentage().intValue()));
                emvParamApp2.append(EMVParamAppCaseA.TAG_DefaultDDOL_DF14, "9F3704");
                emvParamApp2.append(EMVParamAppCaseA.TAG_DefaultTDOL_97_Optional, "9F02065F2A029A039C0195059F3704");
                emvParamApp2.append(EMVParamAppCaseA.TAG_FloorLimit_9F1B, InputUtil.ProcessNumericToFixedDigits(8, String.valueOf("0")));//"00000000");//
                emvParamApp2.append(EMVParamAppCaseA.TAG_ASI_DF01, "01");
                emvParamApp2.append(EMVParamAppCaseA.TAG__87, "01"); //Application Priority Indicator
                emvParamApp2.append(EMVParamAppCaseA.TAG__9C, "00"); //Transaction Code
                emvParamApp2.append(EMVParamAppCaseA.TAG__9F15_Optional, "00");//Merchant Category Code
                emvParamApp2.append(EMVParamAppCaseA.TAG_CountryCodeTerm_9F1A, Constant.BaseCountryCode);
                emvParamApp2.append(EMVParamAppCaseA.TAG_CurrencyCodeTerm_5F2A, Constant.BaseCurrencyCode);
                emvParamApp2.append(EMVParamAppCaseA.TAG_AppTermCap_9F33,"E0F1C8");
                emvParamApp2.append(EMVParamAppCaseA.TAG_AppTermAddCap_9F40,"F000F0A001");


//                emvParamApp.append(EMVParamAppCaseA.TAG__DF04,"000000000000");//CVM Capabilities
                //                emvParamApp.append(EMVParamAppCaseA.TAG__9F5A,"00"); //Terminal Transaction Type

                //  emvParamApp.append(EMVParamKeyCaseA.)

                // emvParamApp.append(0xDF18, "01");
                //Values to get from SERVER...

                emvParamApp2.append(EMVParamAppCaseA.TAG_ECTransLimit_9F7B, "000000100000");
                emvParamApp2.append(EMVParamAppCaseA.TAG_CTLSFloorLimit_DF19, "000000100000");
                emvParamApp2.append(EMVParamAppCaseA.TAG_CTLSTransLimit_DF20, "009999999999");
                emvParamApp2.append(EMVParamAppCaseA.TAG_CTLSCVMLimit_DF21, "000000100000");

                emvParamAppUMSList.add(emvParamApp2);




                EMVParamAppCaseA emvParamApp3 = new EMVParamAppCaseA();

                emvParamApp3.setComment("JCB");
                emvParamApp3.flagAppendRemoveClear = ConstIPBOC.updateRID.operation.append;
                emvParamApp3.aidType = ConstIPBOC.updateAID.aidType.smart_card;

                emvParamApp3.append(EMVParamAppCaseA.TAG_AID_9F06, "A0000000651010");
                emvParamApp3.append(EMVParamAppCaseA.TAG_VerNum_9F09, "0100");// params.getApp_Version_Number());
                emvParamApp3.append(EMVParamAppCaseA.TAG_TAC_Default_DF11, "FC60ACF800");
                emvParamApp3.append(EMVParamAppCaseA.TAG_TAC_Denial_DF13, "0010000000");
                emvParamApp3.append(EMVParamAppCaseA.TAG_TAC_Online_DF12, "FC6024A800");
                emvParamApp3.append(EMVParamAppCaseA.TAG_Threshold_DF15,InputUtil.ProcessNumericToFixedDigits(8,String.valueOf("0")));
                emvParamApp3.append(EMVParamAppCaseA.TAG_TargetPercentage_DF17, "0070"); // String.valueOf(params.getTarget_Percentage().intValue()));
                emvParamApp3.append(EMVParamAppCaseA.TAG_MaxTargetPercentage_DF16, "0070");// String.valueOf(params.getMax_Target_Percentage().intValue()));
                emvParamApp3.append(EMVParamAppCaseA.TAG_DefaultDDOL_DF14, "9F3704");
                emvParamApp3.append(EMVParamAppCaseA.TAG_DefaultTDOL_97_Optional, "9F02065F2A029A039C0195059F3704");
                emvParamApp3.append(EMVParamAppCaseA.TAG_FloorLimit_9F1B, InputUtil.ProcessNumericToFixedDigits(8, String.valueOf("0")));//"00000000");//
                emvParamApp3.append(EMVParamAppCaseA.TAG_ASI_DF01, "01");
                emvParamApp3.append(EMVParamAppCaseA.TAG__87, "01"); //Application Priority Indicator
                emvParamApp3.append(EMVParamAppCaseA.TAG__9C, "00"); //Transaction Code
                emvParamApp3.append(EMVParamAppCaseA.TAG__9F15_Optional, "00");//Merchant Category Code
                emvParamApp3.append(EMVParamAppCaseA.TAG_CountryCodeTerm_9F1A, Constant.BaseCountryCode);
                emvParamApp3.append(EMVParamAppCaseA.TAG_CurrencyCodeTerm_5F2A, Constant.BaseCurrencyCode);

                emvParamApp3.append(EMVParamAppCaseA.TAG_AppTermCap_9F33,"E0F1C8");
                emvParamApp3.append(EMVParamAppCaseA.TAG_AppTermAddCap_9F40,"F000F0A001");


//                emvParamApp.append(EMVParamAppCaseA.TAG__DF04,"000000000000");//CVM Capabilities
                //                emvParamApp.append(EMVParamAppCaseA.TAG__9F5A,"00"); //Terminal Transaction Type

                //  emvParamApp.append(EMVParamKeyCaseA.)

                // emvParamApp.append(0xDF18, "01");
                //Values to get from SERVER...

                emvParamApp3.append(EMVParamAppCaseA.TAG_ECTransLimit_9F7B, "000000100000");
                emvParamApp3.append(EMVParamAppCaseA.TAG_CTLSFloorLimit_DF19, "000000100000");
                emvParamApp3.append(EMVParamAppCaseA.TAG_CTLSTransLimit_DF20, "009999999999");
                emvParamApp3.append(EMVParamAppCaseA.TAG_CTLSCVMLimit_DF21, "000000100000");

                emvParamAppUMSList.add(emvParamApp3);

                // }

//            String[] AIDList = new String[]{
//                    "9F0607A00000006510109F09020001DF1105FC6024A800DF13050010000000DF1205FC60ACF800DF150400000000DF17020070DF16020070DF14039F3704970F9F02065F2A029A039C0195059F37049F1B0400000100DF0101018701019C01019F1501529F1A0203605F2A020360DF1906000000000000DF2006000000000000DF2106000000000000",
//                    "9F0607A00000000410109F09020002DF1105FC50A80000DF13050010000000DF1205FC50A80000DF150500000000DFDF17020020DF16020050DF14039F3704970F9F02065F2A029A039C0195059F37049F1B0400000000DF0101018701019C01009F1501529F1A0203605F2A020360DF1906000000000000DF2006000000000000DF2106000000000000",
//                    "9F0607A00000060210109F09020001DF1105FC50A80000DF13050000000000DF1205FC50A80000DF150400000000DF17020020DF16020050DF14039F3704970F9F02065F2A029A039C0195059F37049F1B0400000000DF0101018701019C01009F1501529F1A0203605F2A020360DF1906000000000000DF2006000000000000DF2106000000000000",
//                    "9F0607A00000000310109F0902008CDF1105DC4000A800DF13050010000000DF1205DC4004F800DF150400000000DF17020014DF16020032DF14039F3704970F9F02065F2A029A039C0195059F37049F1B0400000000DF0101018701019C01009F1501529F1A0203605F2A020360DF1906000010000000DF2006001000000000DF2106000100000000",
//                    "9F0607A00000000320109F09020002DF1105FC50ACA000DF13050000000000DF1205F850ACF800DF150400000000DF17020014DF16020032DF14039F3704970F9F02065F2A029A039C0195059F37049F1B0400000100DF0101018701019C01009F1501009F1A0203605F2A020360DF1906000010000000DF2006001000000000DF2106000100000000",
//                    "9F0607A00000000330109F0902008CDF1105DC4000A800DF13050010000000DF1205DC4004F800DF150400000000DF17020014DF16020032DF14039F3704970F9F02065F2A029A039C0195059F37049F1B0400000000DF0101018701019C01019F1501529F1A0203605F2A020360DF1906000010000000DF2006001000000000DF2106000100000000"
//            };
//            EMVParamAppCaseA emvParamAppUMS = new EMVParamAppCaseA();
//            for (String aid : AIDList) {
//                try {
//                    if (aid.length() == 0) {
//                        continue;
//                    }
//                    emvParamAppUMS = new EMVParamAppCaseA();
//                    emvParamAppUMS.append(aid);
//                    boolean bRet = iemv.updateAID(ConstIPBOC.updateAID.operation.append,
//                            ConstIPBOC.updateAID.aidType.smart_card, aid);
//                    if (bRet) {
//                        Log.d(TAG, "update AID success ");
//                    } else {
//                        Log.e(TAG, "update AID fails ");
//                    }
//
//                } catch (RemoteException e) {
//                    Log.e(TAG, "update AID exception!");
//                    e.printStackTrace();
//                }
//            }


                //   Once we get some values for RID // Certificates .. we will not do hardcoding like below

                EMVParamKeyCaseA emvParamKeyUMS = new EMVParamKeyCaseA();
//                emvParamKeyUMS.comment = params.getCard_Identifier_Name();
//                emvParamKeyUMS.flagAppendRemoveClear = ConstIPBOC.updateRID.operation.append;
//                emvParamKeyUMS.append(EMVParamKey.TAG_RID_9F06, params.getAID_ID().length() > 10 ? params.getAID_ID().substring(0, 9) : params.getAID_ID());
//                emvParamKeyUMS.append(EMVParamKey.TAG_Index_9F22, "0B");
//                emvParamKeyUMS.append(EMVParamKey.TAG_ExpiryDate_DF05, "3230323931323331");
//                emvParamKeyUMS.append(EMVParamKey.TAG_Algorithm_DF07, "01");
//                emvParamKeyUMS.append(EMVParamKey.TAG_KEY_DF02, "CF9FDF46B356378E9AF311B0F981B21A1F22F250FB11F55C958709E3C7241918293483289EAE688A094C02C344E2999F315A72841F489E24B1BA0056CFAB3B479D0E826452375DCDBB67E97EC2AA66F4601D774FEAEF775ACCC621BFEB65FB0053FC5F392AA5E1D4C41A4DE9FFDFDF1327C4BB874F1F63A599EE3902FE95E729FD78D4234DC7E6CF1ABABAA3F6DB29B7F05D1D901D2E76A606A8CBFFFFECBD918FA2D278BDB43B0434F5D45134BE1C2781D157D501FF43E5F1C470967CD57CE53B64D82974C8275937C5D8502A1252A8A5D6088A259B694F98648D9AF2CB0EFD9D943C69F896D49FA39702162ACB5AF29B90BADE005BC157");
//                emvParamKeyUMS.append(EMVParamKey.TAG_Exponent_DF04, "03");
//                emvParamKeyUMS.append(EMVParamKey.TAG_Hash_DF03, "BD331F9996A490B33C13441066A09AD3FEB5F66C");
//
//                emvParamKeyUMSList.add(emvParamKeyUMS);


                //HARDCODING REGION STARTS FOR RID / CERTIFICATES

                String[] ridList = new String[]{
                        // VISA
                        "9F0605A000000003" +
                                "9F220199" +
                                "DF050420291231" +
                                "DF028180AB79FCC9520896967E776E64444E5DCDD6E13611874F3985722520425295EEA4BD0C2781DE7F31CD3D041F565F747306EED62954B17EDABA3A6C5B85A1DE1BEB9A34141AF38FCF8279C9DEA0D5A6710D08DB4124F041945587E20359BAB47B7575AD94262D4B25F264AF33DEDCF28E09615E937DE32EDC03C54445FE7E382777" +
                                "DF040103" +
                                "DF03144ABFFD6B1C51212D05552E431C5B17007D2F5E6D" +
                                "BF010131" +
                                "DF070101",
                        "9F0605A000000003" +
                                "9F220195DF050420291231DF028190BE9E1FA5E9A803852999C4AB432DB28600DCD9DAB76DFAAA47355A0FE37B1508AC6BF38860D3C6C2E5B12A3CAAF2A7005A7241EBAA7771112C74CF9A0634652FBCA0E5980C54A64761EA101A114E0F0B5572ADD57D010B7C9C887E104CA4EE1272DA66D997B9A90B5A6D624AB6C57E73C8F919000EB5F684898EF8C3DBEFB330C62660BED88EA78E909AFF05F6DA627BDF040103DF0314EE1511CEC71020A9B90443B37B1D5F6E703030F6BF010131DF070101",
                        "9F0605A000000003" +
                                "9F220192DF050420291231DF0281B0996AF56F569187D09293C14810450ED8EE3357397B18A2458EFAA92DA3B6DF6514EC060195318FD43BE9B8F0CC669E3F844057CBDDF8BDA191BB64473BC8DC9A730DB8F6B4EDE3924186FFD9B8C7735789C23A36BA0B8AF65372EB57EA5D89E7D14E9C7B6B557460F10885DA16AC923F15AF3758F0F03EBD3C5C2C949CBA306DB44E6A2C076C5F67E281D7EF56785DC4D75945E491F01918800A9E2DC66F60080566CE0DAF8D17EAD46AD8E30A247C9FDF040103DF0314429C954A3859CEF91295F663C963E582ED6EB253BF010131DF070101",
                        "9F0605A000000003" +
                                "9F220107DF050420291231DF028190A89F25A56FA6DA258C8CA8B40427D927B4A1EB4D7EA326BBB12F97DED70AE5E4480FC9C5E8A972177110A1CC318D06D2F8F5C4844AC5FA79A4DC470BB11ED635699C17081B90F1B984F12E92C1C529276D8AF8EC7F28492097D8CD5BECEA16FE4088F6CFAB4A1B42328A1B996F9278B0B7E3311CA5EF856C2F888474B83612A82E4E00D0CD4069A6783140433D50725FDF040103DF0314B4BC56CC4E88324932CBC643D6898F6FE593B172BF010131DF070101",
                        "9F0605A000000003" +
                                "9F220108DF050420291231DF0281B0D9FD6ED75D51D0E30664BD157023EAA1FFA871E4DA65672B863D255E81E137A51DE4F72BCC9E44ACE12127F87E263D3AF9DD9CF35CA4A7B01E907000BA85D24954C2FCA3074825DDD4C0C8F186CB020F683E02F2DEAD3969133F06F7845166ACEB57CA0FC2603445469811D293BFEFBAFAB57631B3DD91E796BF850A25012F1AE38F05AA5C4D6D03B1DC2E568612785938BBC9B3CD3A910C1DA55A5A9218ACE0F7A21287752682F15832A678D6E1ED0BDF040103DF031420D213126955DE205ADC2FD2822BD22DE21CF9A8BF010131DF070101",
                        "9F0605A000000003" +
                                "9F220109DF050420291231DF0281F89D912248DE0A4E39C1A7DDE3F6D2588992C1A4095AFBD1824D1BA74847F2BC4926D2EFD904B4B54954CD189A54C5D1179654F8F9B0D2AB5F0357EB642FEDA95D3912C6576945FAB897E7062CAA44A4AA06B8FE6E3DBA18AF6AE3738E30429EE9BE03427C9D64F695FA8CAB4BFE376853EA34AD1D76BFCAD15908C077FFE6DC5521ECEF5D278A96E26F57359FFAEDA19434B937F1AD999DC5C41EB11935B44C18100E857F431A4A5A6BB65114F174C2D7B59FDF237D6BB1DD0916E644D709DED56481477C75D95CDD68254615F7740EC07F330AC5D67BCD75BF23D28A140826C026DBDE971A37CD3EF9B8DF644AC385010501EFC6509D7A41DF040103DF03141FF80A40173F52D7D27E0F26A146A1C8CCB29046BF010131DF070101",
                        "9F0605A000000003" +
                                "9F220101DF050420291231DF028180C696034213D7D8546984579D1D0F0EA519CFF8DEFFC429354CF3A871A6F7183F1228DA5C7470C055387100CB935A712C4E2864DF5D64BA93FE7E63E71F25B1E5F5298575EBE1C63AA617706917911DC2A75AC28B251C7EF40F2365912490B939BCA2124A30A28F54402C34AECA331AB67E1E79B285DD5771B5D9FF79EA630B75DF040103DF0314D34A6A776011C7E7CE3AEC5F03AD2F8CFC5503CCBF010131DF070101",
                        "9F0605A000000003" +
                                "9F220103DF050420291231DF0270B3E5E667506C47CAAFB12A2633819350846697DD65A796E5CE77C57C626A66F70BB630911612AD2832909B8062291BECA46CD33B66A6F9C9D48CED8B4FC8561C8A1D8FB15862C9EB60178DEA2BE1F82236FFCFF4F3843C272179DCDD384D541053DA6A6A0D3CE48FDC2DC4E3E0EEE15FDF040103DF0314FE70AB3B4D5A1B9924228ADF8027C758483A8B7EBF010131DF070101",
                        // MasterCard
                        "9F0605A000000004" +
                                "9F2201EFDF050420291231DF0281F8A191CB87473F29349B5D60A88B3EAEE0973AA6F1A082F358D849FDDFF9C091F899EDA9792CAF09EF28F5D22404B88A2293EEBBC1949C43BEA4D60CFD879A1539544E09E0F09F60F065B2BF2A13ECC705F3D468B9D33AE77AD9D3F19CA40F23DCF5EB7C04DC8F69EBA565B1EBCB4686CD274785530FF6F6E9EE43AA43FDB02CE00DAEC15C7B8FD6A9B394BABA419D3F6DC85E16569BE8E76989688EFEA2DF22FF7D35C043338DEAA982A02B866DE5328519EBBCD6F03CDD686673847F84DB651AB86C28CF1462562C577B853564A290C8556D818531268D25CC98A4CC6A0BDFFFDA2DCCA3A94C998559E307FDDF915006D9A987B07DDAEB3BDF040103DF031421766EBB0EE122AFB65D7845B73DB46BAB65427ABF010131DF070101",
                        "9F0605A000000004" +
                                "9F2201FADF050420291231DF028190A90FCD55AA2D5D9963E35ED0F440177699832F49C6BAB15CDAE5794BE93F934D4462D5D12762E48C38BA83D8445DEAA74195A301A102B2F114EADA0D180EE5E7A5C73E0C4E11F67A43DDAB5D55683B1474CC0627F44B8D3088A492FFAADAD4F42422D0E7013536C3C49AD3D0FAE96459B0F6B1B6056538A3D6D44640F94467B108867DEC40FAAECD740C00E2B7A8852DDF040103DF03142CFBB82409ED86A31973B0E0CEEA381BC43C8097BF010131DF070101",
                        "9F0605A000000004" +
                                "9F220104DF050420291231DF028190A6DA428387A502D7DDFB7A74D3F412BE762627197B25435B7A81716A700157DDD06F7CC99D6CA28C2470527E2C03616B9C59217357C2674F583B3BA5C7DCF2838692D023E3562420B4615C439CA97C44DC9A249CFCE7B3BFB22F68228C3AF13329AA4A613CF8DD853502373D62E49AB256D2BC17120E54AEDCED6D96A4287ACC5C04677D4A5A320DB8BEE2F775E5FEC5DF040103DF0314381A035DA58B482EE2AF75F4C3F2CA469BA4AA6CBF010131DF070101",
                        "9F0605A000000004" +
                                "9F220105DF050420291231DF0281B0B8048ABC30C90D976336543E3FD7091C8FE4800DF820ED55E7E94813ED00555B573FECA3D84AF6131A651D66CFF4284FB13B635EDD0EE40176D8BF04B7FD1C7BACF9AC7327DFAA8AA72D10DB3B8E70B2DDD811CB4196525EA386ACC33C0D9D4575916469C4E4F53E8E1C912CC618CB22DDE7C3568E90022E6BBA770202E4522A2DD623D180E215BD1D1507FE3DC90CA310D27B3EFCCD8F83DE3052CAD1E48938C68D095AAC91B5F37E28BB49EC7ED597DF040103DF0314EBFA0D5D06D8CE702DA3EAE890701D45E274C845BF010131DF070101",
                        "9F0605A000000004" +
                                "9F220106DF050420291231DF0281F8CB26FC830B43785B2BCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D657336865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EF3D0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747FDF040103DF0314F910A1504D5FFB793D94F3B500765E1ABCAD72D9BF010131DF070101",
                        "9F0605A000000004" +
                                "9F2201F1DF050420231231DF0281B0A0DCF4BDE19C3546B4B6F0414D174DDE294AABBB828C5A834D73AAE27C99B0B053A90278007239B6459FF0BBCD7B4B9C6C50AC02CE91368DA1BD21AAEADBC65347337D89B68F5C99A09D05BE02DD1F8C5BA20E2F13FB2A27C41D3F85CAD5CF6668E75851EC66EDBF98851FD4E42C44C1D59F5984703B27D5B9F21B8FA0D93279FBBF69E090642909C9EA27F898959541AA6757F5F624104F6E1D3A9532F2A6E51515AEAD1B43B3D7835088A2FAFA7BE7DF040103DF0314D8E68DA167AB5A85D8C3D55ECB9B0517A1A5B4BBBF010131DF070101",
                        "9F0605A000000004" +
                                "9F220103DF050420291231DF028180C2490747FE17EB0584C88D47B1602704150ADC88C5B998BD59CE043EDEBF0FFEE3093AC7956AD3B6AD4554C6DE19A178D6DA295BE15D5220645E3C8131666FA4BE5B84FE131EA44B039307638B9E74A8C42564F892A64DF1CB15712B736E3374F1BBB6819371602D8970E97B900793C7C2A89A4A1649A59BE680574DD0B60145DF040103DF03145ADDF21D09278661141179CBEFF272EA384B13BBBF010131DF070101",
                        "9F0605A000000004" +
                                "9F220109DF050420291231DF028180C132F436477A59302E885646102D913EC86A95DD5D0A56F625F472B67F52179BC8BD258A7CD43EF1720AC0065519E3FFCECC26F978EDF9FB8C6ECDF145FDCC697D6B72562FA2E0418B2B80A038D0DC3B769EB027484087CCE6652488D2B3816742AC9C2355B17411C47EACDD7467566B302F512806E331FAD964BF000169F641DF040103DF0300BF010131DF070101",
                        // JCB
                        "9F0605A000000065" +
                                "9F22010FDF050420291231DF0281909EFBADDE4071D4EF98C969EB32AF854864602E515D6501FDE576B310964A4F7C2CE842ABEFAFC5DC9E26A619BCF2614FE07375B9249BEFA09CFEE70232E75FFD647571280C76FFCA87511AD255B98A6B577591AF01D003BD6BF7E1FCE4DFD20D0D0297ED5ECA25DE261F37EFE9E175FB5F12D2503D8CFB060A63138511FE0E125CF3A643AFD7D66DCF9682BD246DDEA1DF040103DF03142A1B82DE00F5F0C401760ADF528228D3EDE0F403BF010131DF070101",
                        "9F0605A000000065" +
                                "9F220113DF050420250101DF0281F8A3270868367E6E29349FC2743EE545AC53BD3029782488997650108524FD051E3B6EACA6A9A6C1441D28889A5F46413C8F62F3645AAEB30A1521EEF41FD4F3445BFA1AB29F9AC1A74D9A16B93293296CB09162B149BAC22F88AD8F322D684D6B49A12413FC1B6AC70EDEDB18EC1585519A89B50B3D03E14063C2CA58B7C2BA7FB22799A33BCDE6AFCBEB4A7D64911D08D18C47F9BD14A9FAD8805A15DE5A38945A97919B7AB88EFA11A88C0CD92C6EE7DC352AB0746ABF13585913C8A4E04464B77909C6BD94341A8976C4769EA6C0D30A60F4EE8FA19E767B170DF4FA80312DBA61DB645D5D1560873E2674E1F620083F30180BD96CA589DF040103DF031454CFAE617150DFA09D3F901C9123524523EBEDF3BF010131DF070101",
                        //
                        "9F0605A000000152" +
                                "9F22015CDF050420291231DF0281B0833F275FCF5CA4CB6F1BF880E54DCFEB721A316692CAFEB28B698CAECAFA2B2D2AD8517B1EFB59DDEFC39F9C3B33DDEE40E7A63C03E90A4DD261BC0F28B42EA6E7A1F307178E2D63FA1649155C3A5F926B4C7D7C258BCA98EF90C7F4117C205E8E32C45D10E3D494059D2F2933891B979CE4A831B301B0550CDAE9B67064B31D8B481B85A5B046BE8FFA7BDB58DC0D7032525297F26FF619AF7F15BCEC0C92BCDCBC4FB207D115AA65CD04C1CF982191DF040103DF0314C165C48EB36DDF969DDC0B326312AFE2F6B52713BF010131DF070101",
                        "9F0605A000000152" +
                                "9F22015BDF050420291231DF028190D3F45D065D4D900F68B2129AFA38F549AB9AE4619E5545814E468F382049A0B9776620DA60D62537F0705A2C926DBEAD4CA7CB43F0F0DD809584E9F7EFBDA3778747BC9E25C5606526FAB5E491646D4DD28278691C25956C8FED5E452F2442E25EDC6B0C1AA4B2E9EC4AD9B25A1B836295B823EDDC5EB6E1E0A3F41B28DB8C3B7E3E9B5979CD7E079EF024095A1D19DDDF040103DF03140000000000000000000000000000000000000000BF010131DF070101",
                        "9F0605A000000152" +
                                "9F22015DDF050420241231DF0281F8AD938EA9888E5155F8CD272749172B3A8C504C17460EFA0BED7CBC5FD32C4A80FD810312281B5A35562800CDC325358A9639C501A537B7AE43DF263E6D232B811ACDB6DDE979D55D6C911173483993A423A0A5B1E1A70237885A241B8EEBB5571E2D32B41F9CC5514DF83F0D69270E109AF1422F985A52CCE04F3DF269B795155A68AD2D6B660DDCD759F0A5DA7B64104D22C2771ECE7A5FFD40C774E441379D1132FAF04CDF55B9504C6DCE9F61776D81C7C45F19B9EFB3749AC7D486A5AD2E781FA9D082FB2677665B99FA5F1553135A1FD2A2A9FBF625CA84A7D736521431178F13100A2516F9A43CE095B032B886C7A6AB126E203BE7DF040103DF0314B51EC5F7DE9BB6D8BCE8FB5F69BA57A04221F39BBF010131DF070101",
                        // PBOC
                        "9F0605A000000333" +
                                "9F220108DF050420291231DF028190B61645EDFD5498FB246444037A0FA18C0F101EBD8EFA54573CE6E6A7FBF63ED21D66340852B0211CF5EEF6A1CD989F66AF21A8EB19DBD8DBC3706D135363A0D683D046304F5A836BC1BC632821AFE7A2F75DA3C50AC74C545A754562204137169663CFCC0B06E67E2109EBA41BC67FF20CC8AC80D7B6EE1A95465B3B2657533EA56D92D539E5064360EA4850FED2D1BFDF040103DF0314EE23B616C95C02652AD18860E48787C079E8E85ABF010131DF070101",
                        "9F0605A000000333" +
                                "9F220109DF050420291231DF0281B0EB374DFC5A96B71D2863875EDA2EAFB96B1B439D3ECE0B1826A2672EEEFA7990286776F8BD989A15141A75C384DFC14FEF9243AAB32707659BE9E4797A247C2F0B6D99372F384AF62FE23BC54BCDC57A9ACD1D5585C303F201EF4E8B806AFB809DB1A3DB1CD112AC884F164A67B99C7D6E5A8A6DF1D3CAE6D7ED3D5BE725B2DE4ADE23FA679BF4EB15A93D8A6E29C7FFA1A70DE2E54F593D908A3BF9EBBD760BBFDC8DB8B54497E6C5BE0E4A4DAC29E5DF040103DF0314A075306EAB0045BAF72CDD33B3B678779DE1F527BF010131DF070101",
                        // PBOC credit or debit
                        "9F0605A000000333" +
                                "9F22010BDF050420291231DF0281F8CF9FDF46B356378E9AF311B0F981B21A1F22F250FB11F55C958709E3C7241918293483289EAE688A094C02C344E2999F315A72841F489E24B1BA0056CFAB3B479D0E826452375DCDBB67E97EC2AA66F4601D774FEAEF775ACCC621BFEB65FB0053FC5F392AA5E1D4C41A4DE9FFDFDF1327C4BB874F1F63A599EE3902FE95E729FD78D4234DC7E6CF1ABABAA3F6DB29B7F05D1D901D2E76A606A8CBFFFFECBD918FA2D278BDB43B0434F5D45134BE1C2781D157D501FF43E5F1C470967CD57CE53B64D82974C8275937C5D8502A1252A8A5D6088A259B694F98648D9AF2CB0EFD9D943C69F896D49FA39702162ACB5AF29B90BADE005BC157DF040103DF03140000000000000000000000000000000000000000BF010131DF070101",
                        "9F0605A000000333" +
                                "9F220184DF050420291231DF0281B0F9EA5503CFE43038596C720645A94E0154793DE73AE5A935D1FB9D0FE77286B61261E3BB1D3DFEC547449992E2037C01FF4EFB88DA8A82F30FEA3198D5D16754247A1626E9CFFB4CD9E31399990E43FCA77C744A93685A260A20E6A607F3EE3FAE2ABBE99678C9F19DFD2D8EA76789239D13369D7D2D56AF3F2793068950B5BD808C462571662D4364B30A2582959DB238333BADACB442F9516B5C336C8A613FE014B7D773581AE10FDF7BDB2669012DDF040103DF03144D4E6D415F2CF8C394D40C49FB2459110578CF22BF010131DF070101",
                        "9F0605A000000333" +
                                "9F220180DF050420291231DF0281809DD730669F27892944A68C0C62344C0E8EC57C2AA78004B014C26A0B0F3B517A0B60D355DFBC8929BBC59CEBCD0CCA13CDAA0C94E91C84A26E7DBE6B58595C4EFF2D717CB9EB965C15D287AF60AC28D06BC51282BC4A518B0EA3ABA9343F1778545FFB49EE840BBCEA457DBAABBFD755BA0F943A08A59CFFB6066B4084767599DF0403010001DF0314A35663495B5702D2ADE19104ADB8EE07F97E8B2ABF010131DF070101",
                        "9F0605A000000333" +
                                "9F220183DF050420291231DF028190E46C9D054471D24A3DAEEA13875ECFB92C34D309106092E6AF57BD612C18E4E2BB3FBBC9E14F86D8660A065848B821347D04521578D4B789FD57231185DF92F45C5733C7912C291D7B13E649B094B33B1B75151C0E4E71E45CCDFD5217DC9F3EF39C3D324CA460DDC40C45CC27B2E421A2B409A47FAAEFD65F8A7F58A269B38CFD9C18210856A493A6624141677F5E95DF040103DF03141CC9BA05BC70F3D049F817404051122E35AC9683BF010131DF070101",
                        "9F0605A000000333" +
                                "9F220185DF050420291231DF0281F8CD026B3E11A7234EFC24FB5976D9F51F7188A1598861AA8A6CA8D9A55300C6E6C39ED97E128973306E7D15DF603823A2C0C2E4C01C5AC0D4E71127DFEC69F2B17DAB12F2E8A84CD30AFC791AE71CD6D69D1B7E7648B2F0BB2140791C585E9CAC6642230B13C81A66E52E927681594EC08CFB30E10658F4199B8BF48B55F140925DEEEF4341E2C6C91E039944A5C44DD72379C2227F02105F462C0E977A2E79D2841143941EB4B4BC1ADAC274E3B0129DE7FDCC77C75BBC29A2861DCE7F748EBEE1E69339348667B729C2900EC6A6D43881622555FA8F8B85E18BD2B8B6F56EBD47643181FF7039D883CB5D723D9DEBD073A5A0CD7B980F0DDF040103DF031496C22F92B7644934F03B4065F1C37BC9DBEA45B0BF010131DF070101",
                };

                for (String rid : ridList) {
                    try {
                        if (rid.length() == 0) {
                            continue;
                        }
                        emvParamKeyUMS = new EMVParamKeyCaseA();
                        emvParamKeyUMS.append(rid);
                        boolean bRet = iemv.updateRID(ConstIPBOC.updateRID.operation.append, rid);
                        if (bRet) {
                            Log.d(TAG, "update RID success ");
                        } else {
                            Log.e(TAG, "update RID fails ");
                        }

                    } catch (RemoteException e) {
                        Log.e(TAG, "update RID exception!");
                        e.printStackTrace();
                    }
                }

                //HARDCODING REGION ENDS


                isSuccess = false;
                try {
                    for (int i = 0; i < emvParamAppUMSList.size(); i++) {
                        isSuccess = iemv.updateAID(emvParamAppUMSList.get(i).flagAppendRemoveClear, emvParamAppUMSList.get(i).aidType, emvParamAppUMSList.get(i).getTlvString());
                        Log.d("TAG", "" + isSuccess);

                        if (isSuccess) {
                            Log.d("TAG", "update AID success:" + emvParamAppUMSList.get(i).getComment());
                        } else {
                            Log.e("TAG", "updateAID false:" + emvParamAppUMSList.get(i).getComment());
                        }
                    }
                    //WHEN NOT HARDCODING AID/ RID - CERTIFICATES ... WE WILL USE THIS


//            for (int i = 0; i < emvParamKeyUMSList.size(); i++) {
//                boolean bRet = ipboc.updateRID(emvParamKeyUMSList.get(i).flagAppendRemoveClear, emvParamKeyUMSList.get(i).getTlvString());
//                if (bRet) {
//                    Log.d(TAG, "update RID success for " + emvParamKeyUMSList.get(i).getTlvString());
//                } else {
//                    Log.e(TAG, "update RID fails for " + emvParamKeyUMSList.get(i));
//                }
//            }
//
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }

        }

    }
}
